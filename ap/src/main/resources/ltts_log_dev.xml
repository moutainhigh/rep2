<?xml version="1.0" encoding="UTF-8"?>
<!-- IDE开发测试时的默认配置 -->
<Configuration status="WARN">
	<!-- 2016.7.4 log4j配置调整差异说明（与之前版本） 1、常用开关提取为属性，方便修改 2、滚动日志采用log4j原生机制（执行动态路径的配置、失效文件的自动清理） 
		3、日志级别的控制进行梳理（系统日志、业务日志、专项日志、功能性日志、其他（第三方日志、系统组件日志）） 4、自定义日志级别 通过配置的方式定义(之前采用编码的方式) 
		5、所有系统专项日志统一加层目录（避免日志压缩后同一级目录下会比较乱） 6、默认Logger includeLocation 属性设置为false，否则对性能没要求的环境可以设置为true（比如：开发环境）（属于性能优化10-20倍的提升） 
		目前行号无法打印，但类名还可以打印 7、appender参数优化：immediateFlush="false" bufferSize="${buffer_size}"（属于性能优化2倍的提升） 
		8、系统日志统一sys开头、业务日志统一biz开头（程序内部规则） 9、log4j系统参数： LOG_OPTS="-Dlog4j2.is.webapp=false 
		-Dlog4j2.enable.threadlocals=true" LOG_OPTS="$LOG_OPTS -Dlog4j.initialReusableMsgSize=300" 
		LOG_OPTS="$LOG_OPTS -DAsyncLoggerConfig.RingBufferSize=1048576" 10、轮训日志按线程明定义，并在LogType中添加pollThread，并去掉没用的类型,具体参数：poll_thread(appender) 
		轮训日志，不管采用什么机制调 但入口要保持统一 -->

	<!-- 属性的定义必须放在 -->
	<Properties>
		<!-- 大的日志级别开关，其他Logger请在下面配置中直接修改 -->
		<property name="sys_log_level">debug</property><!-- 系统日志级别 -->
		<property name="biz_log_level">debug</property><!-- 业务日志级别 -->
		<property name="biz_onl_log_level">debug</property><!-- 业务联机日志级别 -->
		<property name="biz_bat_log_level">error</property><!-- 业务批量日志级别 -->

		<property name="esb_log_level">error</property><!-- PA ESB -->
		<property name="pkg_log_level">info</property><!-- 通讯报文(必须为info以下) -->
		<property name="jybw_log_level">error</property><!-- 系统报文及应用报文流水日志 -->
		<property name="isc_log_level">info</property><!-- ISC日志(必须为info以下) -->
		<property name="mon_log_level">info</property><!-- 监控数据收集 -->
		<property name="log4j_log_level">info</property><!-- log4j自身的日志，如重新加载配置、log4j的异常等信息 -->

		<property name="profile_log_level">off</property><!-- 性能日志打印开关，开启配置：profile 关闭配置：off -->
		<property name="other_log_level">info</property><!-- 没有被控制住的一些日志，漏网之鱼？ -->

		<!-- 是否打印所在的行号(对性能影响比较大) -->
		<property name="enable_log_location">false</property>
		<!-- 分钟,动态日志15分钟内没有使用则自动清理掉 -->
		<property name="dynamic_log_live_time">15</property>

		<!-- 单次写入日志文件的块大(byte) -->
		<property name="buffer_size">1048576</property>

		<!-- 跟运行期交易无关日志 -->
		<property name="default_pattern">
		  <![CDATA[ [%-5p][%d{yyyy-MM-dd HH:mm:ss,SSS}][%t][%-1X{token}][%c{1}][%m]%n ]]>
		</property>


		<!-- 联机交易日志 prcscd [%-1X{transDate}] -->
		<property name="onl_pattern">
		  <![CDATA[ [%-5p][%d{yyyy-MM-dd HH:mm:ss,SSS}][%t][%-1X{token}][%-1X{transSeq}][%-1X{userid}][%-1X{prcscd}][%c{1}][%m]%n ]]>
		</property>

		<!-- 批量交易日志 -->
		<property name="bat_pattern">
			<!-- 批量交易中 jiaoyirq-交易日期 、pljypich-批次号、pljyzbsh-交易组ID、pljylcbs-流程ID -->
		  <![CDATA[ [%-5p][%d{yyyy-MM-dd HH:mm:ss,SSS}][%t][%-1X{token}][%-1X{taskid}][%-1X{jobid}][%t][%c{1}][%m]%n ]]>
		</property>

		<!-- 联机或批量日志 [%-1X{transDate}] -->
		<property name="onl_bat_pattern">
		  <![CDATA[ [%-5p] [%d{yyyy-MM-dd HH:mm:ss,SSS}][%t][%-1X{token}][%-1X{transSeq}][%-1X{taskid}][%-1X{jobid}][%-1X{prcscd}][%c{1}][%m]%n ]]>
		</property>

		<!-- 如果定义目录层级的变量为空，则采用默认变量替代，避免程序异常 -->
		<property name="transDate">transDate</property>
		<property name="flowid">flowid</property>
		<property name="trans_group">trans_group</property>
		<property name="transid">transid</property>
	</Properties>


	<!-- 日志级别顺序，可以调整自定义级别的intLevel，从而调整顺序 ======================================================================================================= 
		OFF(0) << FATAL(100) << ERROR(200) << WARN(300) << SQLINFO/SERVICE(320) << 
		SQL(330) << PROFILE(350) << DATAAREA(360) << METHOD/TECH_METHOD(370) << INFO(400) 
		<< PARM(450) << DEBUG(500), TRACE(600),ALL(Integer.MAX_VALUE) ======================================================================================================= -->

	<CustomLevels>
		<CustomLevel name="SQLIF" intLevel="320" /><!-- sql调用信息日志 -->
		<CustomLevel name="SVC" intLevel="325" /><!-- 服务调用信息日志 -->
		<CustomLevel name="SQL" intLevel="330" /><!-- sql语句日志 -->
		<CustomLevel name="PROF" intLevel="350" /><!-- 性能统计日志 -->
		<CustomLevel name="DAREA" intLevel="360" /><!-- 数据区日志 -->
		<CustomLevel name="METHD" intLevel="370" /><!-- 方法日志 -->
		<CustomLevel name="TECH" intLevel="370" /><!-- 技术方法日志 -->
		<CustomLevel name="PARM" intLevel="550" /><!-- 参数日志 -->
	</CustomLevels>

	<Filters>
		<!-- @simple@ Filter说明：这里属于全局性过滤，级别最高，可以在这里对日志级别做统一控制 控制方式有三种：接受(ACCEPT)、决绝(DENY)、中立(NEUTRAL)；具体：org.apache.logging.log4j.core.Filter.Result -->
		<!-- 指定具体联机交易的日志级别 defaultThreshold表示未明确指定{交易码}的日志级别 <DynamicThresholdFilter 
			key="prcscd" defaultThreshold="${biz_onl_log_level}" onMatch="ACCEPT" onMismatch="NEUTRAL"> 
			<KeyValuePair key="G1001" value="debug" /> </DynamicThresholdFilter> -->

		<DynamicThresholdFilter key="prcscd"
			defaultThreshold="${biz_onl_log_level}" onMatch="ACCEPT" onMismatch="NEUTRAL">
			<KeyValuePair key="R0006" value="ALL" />
		</DynamicThresholdFilter>


		<!-- 批量流程 日志级别控制 defaultThreshold表示未明确指定{批量流程}的日志级别 <DynamicThresholdFilter 
			key="flowid" defaultThreshold="${biz_bat_log_level}" onMatch="ACCEPT" onMismatch="NEUTRAL"> 
			<KeyValuePair key="hx_dayend_30" value="${biz_bat_log_level}" /> <KeyValuePair 
			key="hx_dayend_11" value="${biz_bat_log_level}" /> <KeyValuePair key="jp_dayend" 
			value="${biz_bat_log_level}" /> <KeyValuePair key="gl_dayend" value="debug" 
			/> <KeyValuePair key="tp_dayend" value="${biz_bat_log_level}" /> </DynamicThresholdFilter> -->

		<!-- 过滤支持范围指定 logs="aa;bb;" 匹配前缀 types="aa;bb;" 精确匹配 -->
		<!-- liuzf <DynamicThresholdFilterEx types="biz.job" key="flowid" defaultThreshold="${biz_bat_log_level}" 
			onMatch="ACCEPT" onMismatch="NEUTRAL"> <KeyValuePair key="hx_dayend_30" value="${biz_bat_log_level}" 
			/> <KeyValuePair key="hx_dayend_11" value="${biz_bat_log_level}" /> <KeyValuePair 
			key="jp_dayend" value="${biz_bat_log_level}" /> <KeyValuePair key="gl_dayend" 
			value="debug" /> <KeyValuePair key="tp_dayend" value="${biz_bat_log_level}" 
			/> <KeyValuePair key="mig_batch" value="${biz_bat_log_level}" /> </DynamicThresholdFilterEx> -->
		<!-- 批量交易组 日志级别控制 defaultThreshold表示未明确指定{批量交易组}的日志级别 <DynamicThresholdFilter 
			key="trans_group" defaultThreshold="${biz_bat_log_level}" onMatch="ACCEPT" 
			onMismatch="NEUTRAL"> <KeyValuePair key="F0935L1_03" value="SQLIF" /> <KeyValuePair 
			key="R3033_01" value="SQLIF" /> <KeyValuePair key="F0935L1_04" value="SQLIF" 
			/> </DynamicThresholdFilter> -->

		<!-- 批量交易 日志级别控制 defaultThreshold表示未明确指定{批量交易}的日志级别 <DynamicThresholdFilter 
			key="transid" defaultThreshold="${biz_bat_log_level}" onMatch="ACCEPT" onMismatch="NEUTRAL"> 
			<KeyValuePair key="F0935L2" value="SQLIF" /> <KeyValuePair key="F0935L2" 
			value="SQLIF" /> </DynamicThresholdFilter> -->



		<!-- 将所有日志一刀切设置为某个级别 例如：off关闭所有日志 <ThresholdFilter level="off" onMatch="ACCEPT" 
			onMismatch="NEUTRAL" /> -->


		<!-- 指定具体某个轮训的日志级别(按目录名称来过滤) <DynamicThresholdFilter key="poll2.kind" defaultThreshold="error" 
			onMatch="ACCEPT" onMismatch="NEUTRAL"> <KeyValuePair key="xx" value="debug" 
			/> </DynamicThresholdFilter> -->


		<!-- 指定不同日志类的日志级别 <DynamicThresholdFilter key="ltts_log_type" defaultThreshold="error" 
			onMatch="ACCEPT" onMismatch="NEUTRAL"> <KeyValuePair key="boot" value="info" 
			/> <KeyValuePair key="poll2" value="info" /> <KeyValuePair key="quartz" value="info" 
			/> <KeyValuePair key="links" value="info" /> <KeyValuePair key="biz.onl" 
			value="info" /> <KeyValuePair key="biz.job" value="info" /> </DynamicThresholdFilter> -->

		<!-- 指定某一段时间内时间基本， 例如：每天下午12-14点将所有日志设置为debug级别 <TimeFilter start="12:00:00" 
			end="14:00:00" onMatch="ACCEPT" onMismatch="NEUTRAL" /> -->
	</Filters>
	<Appenders>

		<Routing name="busi_route">
			<Routes pattern="$${ctx:ltts_log_type}">
				<!-- <Route key="boot" ref="boot_all" />
				<Route key="poll2" ref="poll_thread" />
				<Route key="quartz" ref="timer_quartz" />
				<Route key="domain" ref="domain" />
				<Route key="links" ref="links" />
				<Route key="biz.onl" ref="busi_onl" />
				<Route key="biz.job" ref="busi_job" /> -->
				<!-- 默认路由日志 -->
				<!-- <Route ref="default" /> -->
				<Route ref="busi_console" />
			</Routes>
		</Routing>

		<!-- 平台默认日志 （按天滚动） -->
		<RollingFile name="default"
			fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/defalut/ltts_default.log"
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/defalut/ltts_default.log.%d{yyyy-MM-dd}-%i.gz"
			immediateFlush="false" bufferSize="${buffer_size}">
			<PatternLayout pattern="${default_pattern}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="60MB" />
			</Policies>
			<DefaultRolloverStrategy min="1" max="999" />
		</RollingFile>


		<Routing name="busi_onl">
			<Routes pattern="$${ctx:transDate}_$${ctx:prcscd}">
				<Route>
					<!--动态appender -->
					<RollingFile name="busi_onl_appender_$${ctx:transDate}_$${ctx:prcscd}"
						fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/busi/${ctx:transDate}/${ctx:prcscd}/${ctx:prcscd}.log"
						filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/busi/${ctx:transDate}/${ctx:prcscd}/${ctx:prcscd}.log.%d{yyyy-MM-dd}-%i.gz"
						immediateFlush="false" bufferSize="${buffer_size}">
						<PatternLayout pattern="${onl_pattern}" />
						<Policies>
							<TimeBasedTriggeringPolicy />
							<SizeBasedTriggeringPolicy size="60MB" />
						</Policies>
						<DefaultRolloverStrategy min="1" max="999" />
					</RollingFile>
				</Route>
			</Routes>
			<!-- 15分钟内如果文件没有任何操作，则清理掉 -->
			<IdlePurgePolicy timeToLive="${dynamic_log_live_time}"
				timeUnit="minutes" />
		</Routing>

		<Routing name="busi_job">
			<Routes
				pattern="$${ctx:transDate}/$${ctx:flowid}/$${ctx:trans_group}/$${ctx:transid}">
				<Route>
					<!--动态appender -->
					<RollingFile
						name="busi_bat_appender_$${ctx:transDate}/$${ctx:flowid}/$${ctx:trans_group}$${ctx:transid}"
						fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/busi/${ctx:transDate}/${ctx:flowid}/${ctx:trans_group}/${ctx:transid}/${ctx:transid}.log"
						filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/busi/${ctx:transDate}/${ctx:flowid}/${ctx:trans_group}/${ctx:transid}/${ctx:transid}.log.%d{yyyy-MM-dd}-%i.gz"
						immediateFlush="false" bufferSize="${buffer_size}">
						<PatternLayout pattern="${bat_pattern}" />
						<Policies>
							<TimeBasedTriggeringPolicy />
							<SizeBasedTriggeringPolicy size="60MB" />
						</Policies>
						<DefaultRolloverStrategy min="1" max="99" />
					</RollingFile>
				</Route>
			</Routes>
			<!-- 15分钟内如果文件没有任何操作，则清理掉 -->
			<IdlePurgePolicy timeToLive="${dynamic_log_live_time}"
				timeUnit="minutes" />
		</Routing>

		<RollingFile name="domain"
			fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/domain/ltts_domain.log"
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/domain/ltts_domain.log.%d{yyyy-MM-dd}-%i.gz"
			immediateFlush="false" bufferSize="${buffer_size}">
			<PatternLayout pattern="${onl_bat_pattern}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="60MB" />
			</Policies>
			<DefaultRolloverStrategy min="1" max="999" />
		</RollingFile>
		<RollingFile name="links"
			fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/links/ltts_links.log"
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/links/ltts_links.log.%d{yyyy-MM-dd}-%i.gz"
			immediateFlush="false" bufferSize="${buffer_size}">
			<PatternLayout pattern="${default_pattern}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="60MB" />
			</Policies>
			<DefaultRolloverStrategy min="1" max="999" />
		</RollingFile>


		<Routing name="poll_thread">
			<Routes pattern="$${ctx:poll2.kind}">
				<Route>
					<!--动态appender -->
					<RollingFile name="sys_poll_appender_${ctx:poll2.kind}"
						fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/poll/${ctx:poll2.kind}/${ctx:poll2.kind}.log"
						filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/poll/${ctx:poll2.kind}/${ctx:poll2.kind}.log.%d{yyyy-MM-dd}-%i.gz"
						immediateFlush="false" bufferSize="${buffer_size}">
						<PatternLayout pattern="${default_pattern}" />
						<Policies>
							<TimeBasedTriggeringPolicy />
							<SizeBasedTriggeringPolicy size="60MB" />
						</Policies>
						<DefaultRolloverStrategy min="1" max="999" />
					</RollingFile>
				</Route>
			</Routes>
			<!-- 15分钟内如果文件没有任何操作，则清理掉 -->
			<IdlePurgePolicy timeToLive="${dynamic_log_live_time}"
				timeUnit="minutes" />
		</Routing>

		<Routing name="timer_quartz">
			<Routes pattern="$${ctx:timer.kind}">
				<Route>
					<!--动态appender -->
					<RollingFile name="sys_poll_appender_${ctx:timer.kind}"
						fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/poll/timerBusi/${ctx:timer.kind}/${ctx:timer.kind}.log"
						filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/poll/timerBusi/${ctx:timer.kind}/${ctx:timer.kind}.log.%d{yyyy-MM-dd}-%i.gz"
						immediateFlush="false" bufferSize="${buffer_size}">
						<PatternLayout pattern="${default_pattern}" />
						<Policies>
							<TimeBasedTriggeringPolicy />
							<SizeBasedTriggeringPolicy size="60MB" />
						</Policies>
						<DefaultRolloverStrategy min="1" max="99" />
					</RollingFile>
				</Route>
			</Routes>
			<!-- 15分钟内如果文件没有任何操作，则清理掉 -->
			<IdlePurgePolicy timeToLive="${dynamic_log_live_time}"
				timeUnit="minutes" />
		</Routing>






		<!-- 插件日志 （按天滚动） <RollingFile name="plugin" fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/plugin/ltts_plugin.log" 
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/plugin/ltts_plugin.log.%d{yyyy-MM-dd}-%i.gz" 
			immediateFlush="false" bufferSize="${buffer_size}" > <PatternLayout pattern="${onl_bat_pattern}" 
			/> <Policies> <TimeBasedTriggeringPolicy /> <SizeBasedTriggeringPolicy size="60MB" 
			/> </Policies> <DefaultRolloverStrategy min="1" max="999" /> </RollingFile> -->
		<!-- 启动日志 （按天滚动） <RollingFile name="boot" fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/boot/ltts_boot.log" 
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/boot/ltts_boot.log.%d{yyyy-MM-dd}-%i.gz" 
			immediateFlush="false" bufferSize="${buffer_size}" > <PatternLayout pattern="${default_pattern}" 
			/> <Policies> <TimeBasedTriggeringPolicy /> <SizeBasedTriggeringPolicy size="60MB" 
			/> </Policies> <DefaultRolloverStrategy min="1" max="999" /> </RollingFile> -->

		<!-- 启动日志 完整过程 （按天滚动） -->
		<RollingFile name="boot_all"
			fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/boot/ltts_boot_all.log"
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/boot/ltts_boot_all.log.%d{yyyy-MM-dd}-%i.gz"
			immediateFlush="false" bufferSize="${buffer_size}">
			<PatternLayout pattern="${default_pattern}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="60MB" />
			</Policies>
			<DefaultRolloverStrategy min="1" max="999" />
		</RollingFile>

		<!-- 轮询日志 <RollingFile name="poll" fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/poll/ltts_poll.log" 
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/poll/ltts_poll.log.%d{yyyy-MM-dd}-%i.gz" 
			immediateFlush="false" bufferSize="${buffer_size}" > <PatternLayout pattern="${default_pattern}" 
			/> <Policies> <TimeBasedTriggeringPolicy /> <SizeBasedTriggeringPolicy size="60MB" 
			/> </Policies> <DefaultRolloverStrategy min="1" max="999" /> </RollingFile> -->

		<!-- 调优日志 （联机、批量、路由） -->
		<RollingFile name="profile_onl"
			fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/profile/ltts_profile.log"
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/profile/ltts_profile.log.%d{yyyy-MM-dd}-%i.gz"
			immediateFlush="false" bufferSize="${buffer_size}">
			<PatternLayout pattern="${onl_pattern}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="60MB" />
			</Policies>
			<DefaultRolloverStrategy min="1" max="999" />
		</RollingFile>

		<RollingFile name="profile_bat"
			fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/profile/ltts_profile.log"
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/profile/ltts_profile.log.%d{yyyy-MM-dd}-%i.gz"
			immediateFlush="false" bufferSize="${buffer_size}">
			<PatternLayout pattern="${bat_pattern}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="60MB" />
			</Policies>
			<DefaultRolloverStrategy min="1" max="999" />
		</RollingFile>

		<!-- 根据日志类型路由不同的日志文件 -->
		<Routing name="profile_route">
			<Routes pattern="$${ctx:SysType}">
				<!-- 默认路由日志 -->
				<!-- <Route ref="default" /> -->
				<Route ref="busi_console"/>
				<!-- 联机交易日志 -->
				<!-- <Route key="onl" ref="profile_onl" /> -->
				<!-- 批量交易日志 -->
				<!-- <Route key="batch" ref="profile_bat" /> -->
			</Routes>
		</Routing>







		<!-- 关键调用日志 （按天滚动） <RollingFile name="callpath_onl" fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/ltts_callpath_onl.log" 
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/ltts_callpath_onl.log.%d{yyyy-MM-dd}-%i.gz"> 
			<PatternLayout pattern="${onl_pattern}" /> <Policies> <TimeBasedTriggeringPolicy 
			/> <SizeBasedTriggeringPolicy size="60MB" /> </Policies> <DefaultRolloverStrategy 
			min="1" max="999" /> </RollingFile> <RollingFile name="callpath_bat" fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/callpath_bat/ltts_callpath_bat.log" 
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/callpath_bat/ltts_callpath_bat.log.%d{yyyy-MM-dd}-%i.gz" 
			immediateFlush="false" bufferSize="${buffer_size}" > <PatternLayout pattern="${bat_pattern}" 
			/> <Policies> <TimeBasedTriggeringPolicy /> <SizeBasedTriggeringPolicy size="60MB" 
			/> </Policies> <DefaultRolloverStrategy min="1" max="999" /> </RollingFile> -->
		<!-- 服务器日志 <RollingFile name="server_bat" fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/server_bat/ltts_server_bat.log" 
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/server_bat/ltts_server_bat.log.%d{yyyy-MM-dd}-%i.gz" 
			immediateFlush="false" bufferSize="${buffer_size}" > <PatternLayout pattern="${bat_pattern}" 
			/> <Policies> <TimeBasedTriggeringPolicy /> <SizeBasedTriggeringPolicy size="60MB" 
			/> </Policies> <DefaultRolloverStrategy min="1" max="999" /> </RollingFile> -->
		<!-- <RollingFile name="server_onl" fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/server_onl/ltts_server_onl.log" 
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/server_onl/ltts_server_onl.log.%d{yyyy-MM-dd}-%i.gz" 
			immediateFlush="false" bufferSize="${buffer_size}" > <PatternLayout pattern="${onl_pattern}" 
			/> <Policies> <TimeBasedTriggeringPolicy /> <SizeBasedTriggeringPolicy size="60MB" 
			/> </Policies> <DefaultRolloverStrategy min="1" max="999" /> </RollingFile> -->



		<RollingFile name="pkg"
			fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/pkg/ltts_pkg.log"
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/pkg/ltts_pkg.log.%d{yyyy-MM-dd}-%i.gz">
			<PatternLayout pattern="${onl_pattern}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="60MB" />
			</Policies>
			<DefaultRolloverStrategy min="1" max="999" />
		</RollingFile>

		<!-- 异步登记系统报文流水日志（按天滚动） -->
		<RollingFile name="jybw"
			fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/pkg/ltts_jybw.log"
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/pkg/ltts_jybw.log.%d{yyyy-MM-dd}-%i.gz">
			<PatternLayout pattern="${onl_pattern}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="60MB" />
			</Policies>
			<DefaultRolloverStrategy min="1" max="999" />
		</RollingFile>

		<!-- 异步登记应用报文流水日志（按天滚动） -->
		<RollingFile name="jybw_aplt"
			fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/pkg/ltts_jybw_aplt.log"
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/pkg/ltts_jybw_aplt.log.%d{yyyy-MM-dd}-%i.gz">
			<PatternLayout pattern="${onl_pattern}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="60MB" />
			</Policies>
			<DefaultRolloverStrategy min="1" max="999" />
		</RollingFile>

		<!-- ISC日志 -->
		<RollingFile name="isc"
			fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/pkg/ltts_isc.log"
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/pkg/ltts_isc.log.%d{yyyy-MM-dd}-%i.gz">
			<PatternLayout pattern="${onl_pattern}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="60MB" />
			</Policies>
			<DefaultRolloverStrategy min="1" max="999" />
		</RollingFile>

		<!-- 监控数据收集 -->
		<RollingFile name="mon"
			fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/mon_${sys:ltts.vmid}.log"
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/mon_${sys:ltts.vmid}.log.%d{yyyy-MM-dd}.gz">
			<Policies>
				<TimeBasedTriggeringPolicy />
			</Policies>
			<DefaultRolloverStrategy min="1" max="24" />
		</RollingFile>


		<!-- 慢sql打印 -->
		<RollingFile name="slowsql"
			fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/slowsql/ltts_slowsql.log"
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/slowsql/ltts_slowsql.log.%d{yyyy-MM-dd}-%i.gz"
			immediateFlush="false" bufferSize="${buffer_size}">
			<!-- @simple@ 过滤特定SQL不打印 ,例如：kdgl_zhminx的相关SQL统一不打印 <RegexFilter regex=".*kdgl_zhminx.*" 
				onMatch="DENY" onMismatch="NEUTRAL" /> -->

			<PatternLayout pattern="${onl_bat_pattern}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="60MB" />
			</Policies>
			<DefaultRolloverStrategy min="1" max="999" />
		</RollingFile>

		<!-- 慢sql打印 -->
		<RollingFile name="alert"
			fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/alert/ltts_alert.log"
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/alert/ltts_alert.log.%d{yyyy-MM-dd}-%i.gz"
			immediateFlush="false" bufferSize="${buffer_size}">
			<PatternLayout pattern="${onl_bat_pattern}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="60MB" />
			</Policies>
			<DefaultRolloverStrategy min="1" max="999" />
		</RollingFile>



		<RollingFile name="metrics"
			fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/metrics/ltts_metrics.log"
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/metrics/ltts_metrics.log.%d{yyyy-MM-dd}-%i.gz"
			immediateFlush="false" bufferSize="${buffer_size}">
			<PatternLayout pattern="${onl_bat_pattern}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="60MB" />
			</Policies>
			<DefaultRolloverStrategy min="1" max="999" />
		</RollingFile>
		<!-- -->
		<RollingFile name="error"
			fileName="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/error/ltts_error.log"
			filePattern="${sys:ltts.log.home}/${sys:ltts.vmid}/sys/error/ltts_error.log.%d{yyyy-MM-dd}-%i.gz"
			immediateFlush="false" bufferSize="${buffer_size}">
			<PatternLayout pattern="${onl_bat_pattern}" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="60MB" />
			</Policies>
			<DefaultRolloverStrategy min="1" max="999" />
		</RollingFile>
		<!-- 控制台 -->
		<Console name="busi_console">
			<PatternLayout>
				<Pattern>[%d] [%p] [%C:%L] [%t] [%m]%n</Pattern>
			</PatternLayout>
		</Console>
	</Appenders>

	<Loggers>
		<!--平安第三方组件日志 -->
		<AsyncLogger name="com.dcfs.esb" level="${esb_log_level}"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />
		</AsyncLogger>
		<AsyncLogger name="com.pingan.isc" level="${isc_log_level}"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="isc" />
		</AsyncLogger>


		<!-- 业务日志(所有业务日志统一从这里打印) -->
		<AsyncLogger name="biz" level="${biz_log_level}"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />
		</AsyncLogger>



		<!-- 一些漏网之鱼，原则该文件应该为空 -->
		<AsyncRoot level="${other_log_level}" additivity="false"
			includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />
		</AsyncRoot>


		<!-- 系统日志(只能控制到非专项日志) -->
		<AsyncLogger name="sys" level="${sys_log_level}"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />
		</AsyncLogger>

		<!-- 在links日志中体现 <AsyncLogger name="sys.onl.jybw" level="error" additivity="false" 
			includeLocation="${enable_log_location}"> <AppenderRef ref="busi_route" /> 
			</AsyncLogger> -->


		<!-- 系統-专项日志(基础平台) -->
		<AsyncLogger name="sys.boot" level="info" additivity="false"
			includeLocation="${enable_log_location}">
			<!--<AppenderRef ref="boot" /> -->
			<AppenderRef ref="busi_route" />
		</AsyncLogger>

		<AsyncLogger name="sys.onl.pkg" level="${pkg_log_level}"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="pkg" />
		</AsyncLogger>
		<AsyncLogger name="sys.onl.jybw" level="${jybw_log_level}"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="jybw" />
		</AsyncLogger>
		<AsyncLogger name="sys.onl.jybw.aplt" level="${jybw_log_level}"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="jybw_aplt" />
		</AsyncLogger>
		<AsyncLogger name="sys.ISCMsgBroker" level="${isc_log_level}"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="isc" />
		</AsyncLogger>

		<!-- <AsyncLogger name="sys.onl.mon" level="${mon_log_level}" additivity="false" 
			includeLocation="${enable_log_location}"> <AppenderRef ref="mon" /> </AsyncLogger> -->
		<!-- 由于监控日志每次打印数据过大，如果采用异步方式会将环称大，则采用同步直接写的方式（异步轮训处理对性能没什么影响） -->
		<Logger name="sys.onl.mon" level="${mon_log_level}" additivity="false"
			includeLocation="${enable_log_location}">
			<AppenderRef ref="mon" />
		</Logger>

		<!-- <AsyncLogger name="sys.plugin" level="info" additivity="false" includeLocation="${enable_log_location}" 
			> <AppenderRef ref="plugin" /> </AsyncLogger> <AsyncLogger name="sys.poll" 
			level="info" additivity="false" includeLocation="${enable_log_location}" 
			> <AppenderRef ref="poll" /> </AsyncLogger> -->

		<AsyncLogger name="sys.profile" level="${profile_log_level}"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="profile_route" />
		</AsyncLogger>
		<!-- <AsyncLogger name="sys.onl.links" level="info" additivity="false" 
			includeLocation="${enable_log_location}"> <AppenderRef ref="links_onl" /> 
			</AsyncLogger> <AsyncLogger name="sys.bat.links" level="info" additivity="false" 
			includeLocation="${enable_log_location}"> <AppenderRef ref="links_bat" /> 
			</AsyncLogger> <AsyncLogger name="sys.onl.callpath" level="info" additivity="false" 
			includeLocation="${enable_log_location}"> <AppenderRef ref="callpath_onl" 
			/> </AsyncLogger> <AsyncLogger name="sys.bat.callpath" level="info" additivity="false" 
			includeLocation="${enable_log_location}"> <AppenderRef ref="callpath_bat" 
			/> </AsyncLogger> <AsyncLogger name="sys.onl.server" level="info" additivity="false" 
			includeLocation="${enable_log_location}"> <AppenderRef ref="server_onl" /> 
			</AsyncLogger> <AsyncLogger name="sys.bat.server" level="info" additivity="false" 
			includeLocation="${enable_log_location}"> <AppenderRef ref="server_bat" /> 
			</AsyncLogger> -->

		<AsyncLogger name="sys.slowSql" level="info" additivity="false"
			includeLocation="${enable_log_location}">
			<AppenderRef ref="slowsql" />
		</AsyncLogger>

		<!-- 系统错误，错误日志也打印到父类log中 -->
		<AsyncLogger name="sys.error" level="info" additivity="true"
			includeLocation="${enable_log_location}">
			<AppenderRef ref="error" />
		</AsyncLogger>
		 
		
		<!---->
		<AsyncLogger name="sys.metrics" level="info" additivity="false"
			includeLocation="${enable_log_location}">
			<AppenderRef ref="metrics" />
		</AsyncLogger>
		<AsyncLogger name="sys.metrics.alert" level="info"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="alert" />
		</AsyncLogger>





		<!-- for JDBC 最新架构 -->
		<AsyncLogger name="sys.jdbc.audit" level="FATAL"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />

		</AsyncLogger>
		<AsyncLogger name="sys.jdbc.resultset" level="FATAL"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />

		</AsyncLogger>
		<!-- 如果要打印具体的SQL日志，这个必须为debug -->
		<AsyncLogger name="sys.jdbc.sqlonly" level="debug"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />

		</AsyncLogger>
		<AsyncLogger name="sys.jdbc.sqltiming" level="FATAL"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />

		</AsyncLogger>

		<AsyncLogger name="sys.jdbc.connection" level="FATAL"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />

		</AsyncLogger>
		<AsyncLogger name="sys.log4jdbc.debug" level="FATAL"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />
		</AsyncLogger>
		<!-- for JDBC -->

		<!-- for ibatis -->
		<AsyncLogger name="org.apache.ibatis" level="error"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />
		</AsyncLogger>
		<!-- for ibatis -->

		<!-- for 屏蔽第三方日志 -->

		<!-- 如果log4j自身的异常，则打印到sys/error日志中 -->
		<AsyncLogger name="org.apache.logging.log4j.status.StatusLogger"
			level="${log4j_log_level}" additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="error" />
		</AsyncLogger>

		<AsyncLogger name="org.springframework" level="ERROR"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />
		</AsyncLogger>
		<AsyncLogger name="org.mortbay" level="ERROR" additivity="false"
			includeLocation="true">
			<AppenderRef ref="busi_route" />
		</AsyncLogger>
		<AsyncLogger name="freemarker" level="ERROR" additivity="false"
			includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />
		</AsyncLogger>
		<AsyncLogger name="com.solacesystems" level="FATAL"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />
		</AsyncLogger>
		<AsyncLogger name="com.solacesystems.jcsmp.protocol.impl"
			level="FATAL" additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />
		</AsyncLogger>
		<AsyncLogger name="com.solacesystems.jcsmp.impl" level="FATAL"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />
		</AsyncLogger>
		<AsyncLogger name="org.eclipse.jetty" level="INFO"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />
		</AsyncLogger>
		<AsyncLogger name="org.quartz" level="ERROR" additivity="false"
			includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />
		</AsyncLogger>
		<AsyncLogger name="org.joda" level="ERROR" additivity="false"
			includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />
		</AsyncLogger>
		<AsyncLogger name="org.apache.commons" level="ERROR"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />
		</AsyncLogger>
		<AsyncLogger name="net.sf.jasperreports" level="ERROR"
			additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />
		</AsyncLogger>
		<AsyncLogger name="org.apache.ibatis.logging.jdbc.BaseJdbcLogger"
			level="ERROR" additivity="false" includeLocation="${enable_log_location}">
			<AppenderRef ref="busi_route" />
		</AsyncLogger>

		<!-- for 屏蔽第三方日志 -->



	</Loggers>

</Configuration>
